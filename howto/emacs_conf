;;; package --- Andrew Lyjak's Emacs configuration
;;; Commentary:
;;; An Emacs config that's been evolving over a decade

;;; Code:
;; from http://melpa.org/#/getting-started
(require 'package) ;; You might already have this line
(let* ((no-ssl (and (memq system-type '(windows-nt ms-dos))
                    (not (gnutls-available-p))))
       (url (concat (if no-ssl "http" "https") "://melpa.org/packages/")))
  (add-to-list 'package-archives (cons "melpa" url) t))
(when (< emacs-major-version 24)
  ;; For important compatibility libraries like cl-lib
  (add-to-list 'package-archives '("gnu" . "http://elpa.gnu.org/packages/")))
(package-initialize) ;; You might already have this line

(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(ansi-color-faces-vector
   [default bold shadow italic underline bold bold-italic bold])
 '(ansi-color-names-vector
   ["#212526" "#ff4b4b" "#b4fa70" "#fce94f" "#729fcf" "#e090d7" "#8cc4ff" "#eeeeec"])
 '(column-number-mode t)
 '(custom-enabled-themes '(deeper-blue))
 '(custom-safe-themes
   '("f149d9986497e8877e0bd1981d1bef8c8a6d35be7d82cba193ad7e46f0989f6a" "90a6f96a4665a6a56e36dec873a15cbedf761c51ec08dd993d6604e32dd45940" default))
 '(fci-rule-color "#ECEFF1")
 '(fill-column 100)
 '(flycheck-checker-error-threshold 4000)
 '(hl-sexp-background-color "#efebe9")
 '(inhibit-startup-buffer-menu t)
 '(inhibit-startup-echo-area-message "alyjak")
 '(inhibit-startup-screen t)
 '(lsp-diagnostics-provider :flycheck)
 '(lsp-rust-all-features t)
 '(lsp-rust-analyzer-cargo-extra-args [])
 '(lsp-rust-analyzer-exclude-globs ["target/" "dist/" "gen/" "public/" "style/" "core/"])
 '(lsp-rust-analyzer-rustfmt-override-command ["leptosfmt" "--stdin" "--rustfmt"])
 '(lsp-rust-server 'rust-analyzer)
 '(lsp-semantic-tokens-enable t)
 '(lsp-ui-sideline-show-hover t)
 '(lsp-ui-sideline-update-mode 'point)
 '(org-agenda-files
   '("/home/alyjak/code/animistic-agency/roadmap.org" "/home/alyjak/code/animistic-agency/40_design/phase_one_roadmap.org" "/home/alyjak/code/spacelyjak/roadmap.org"))
 '(package-selected-packages
   '(rustic flycheck-rust company counsel org org-roam org-roam-bibtex org-roam-timestamps org-roam-ui emacsql-sqlite-module typescript-mode writeroom-mode python-mode sphinx-doc python-docstring magit ansible yaml-mode dockerfile-mode bitbake chronos sass-mode dap-mode toml-mode vue-html-mode vue-mode flycheck-pest pest-mode dash fullframe which-key yasnippet lsp-ui lsp-mode use-package flycheck-inline cargo rust-mode flycheck ess markdown-mode material-theme ##))
 '(rst-preferred-adornments
   '((35 over-and-under 0)
     (42 over-and-under 0)
     (61 simple 0)
     (95 simple 0)
     (94 simple 0)
     (34 simple 0)
     (126 simple 0)
     (96 simple 0)))
 '(rst-toc-indent 3)
 '(rust-format-on-save t)
 '(rust-rustfmt-bin "leptosfmt")
 '(rust-rustfmt-switches '("--stdin" "--rustfmt"))
 '(safe-local-variable-values
   '((flycheck-python-pylint-executable . "/home/alyjak/code/h3id/ansible_env/bin/python3")
     (flycheck-python-flake8-executable . "/home/alyjak/code/h3id/ansible_env/bin/python3")))
 '(scroll-bar-mode nil)
 '(tool-bar-mode nil)
 '(vc-annotate-background nil)
 '(vc-annotate-color-map
   '((20 . "#B71C1C")
     (40 . "#FF5722")
     (60 . "#FFA000")
     (80 . "#558b2f")
     (100 . "#00796b")
     (120 . "#2196f3")
     (140 . "#4527A0")
     (160 . "#B71C1C")
     (180 . "#FF5722")
     (200 . "#FFA000")
     (220 . "#558b2f")
     (240 . "#00796b")
     (260 . "#2196f3")
     (280 . "#4527A0")
     (300 . "#B71C1C")
     (320 . "#FF5722")
     (340 . "#FFA000")
     (360 . "#558b2f")))
 '(vc-annotate-very-old-color nil))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(default ((t (:family "Iosevka Term" :slant normal :weight medium :height 110 :width normal :foundry "BE5N"))))
 '(fixed-pitch ((t (:family "Iosevka"))))
 '(lsp-ui-sideline-symbol-info ((t (:slant italic :height 0.7)))))

(use-package windmove
  :ensure t
  :config
  (windmove-default-keybindings '(control shift))
  (setq windmove-wrap-around t))

(require 'use-package)
(use-package org
  :pin gnu)
(use-package find-lisp)
;; rust notes
;; https://emacs-lsp.github.io/lsp-mode/page/lsp-rust/
;; set up rust-analyzer
;; https://github.com/rust-analyzer/rust-analyzer
;; rust install:
;; https://www.rust-lang.org/tools/install
;; (update path to include ~/.cargo/bin)
(use-package counsel)
(ivy-mode 1)
(use-package yasnippet
  :ensure t
  )

(setenv "LC_ALL" "en_US.UTF-8")
(setenv "LC_CTYPE" "en_US.UTF-8")

; Map txt files to rst mode
(setq auto-mode-alist
  (append
   ;; File name (within directory) starts with a dot.
   '(("\\.txt\\'" . rst-mode)
     ("\\.rst\\'" . rst-mode)
     ("\\.rest\\'" . rst-mode)) auto-mode-alist))

; Map bitbake files to bitbake-mode
(setq auto-mode-alist
  (append
   ;; File name (within directory) starts with a dot.
   '(("\\.bb\\'" . bitbake-mode)
     ("\\.bbappend\\'" . bitbake-mode)
     ("\\.inc\\'" . bitbake-mode)) auto-mode-alist))

(load-theme 'material t)

;; Always highlight parenthesis!
(show-paren-mode 1)

;; make trailing whitespace display in an annoying manner
(setq-default show-trailing-whitespace t)

(add-to-list 'load-path "~/.emacs.d/lisp/")

(require 'fullframe)
(use-package fullframe
  :ensure t
  :defer t
  :init
  (progn
    (fullframe magit-status magit-mode-quit-window)
    (fullframe list-packages quit-window)
    )
  )

(use-package flycheck
  :ensure t
  :init (global-flycheck-mode))

(use-package rustic)
;; (use-package rust-mode
;;   :init
;;   (setq rust-format-on-save t)
;;   (setq rust-mode-treesitter-derive t))
;; (add-hook 'rust-mode-hook (lambda () (prettify-symbols-mode)))

(use-package lsp-mode
  :commands lsp
  :init
  (setq lsp-keymap-prefix "C-c l")
  :config
  (define-key lsp-mode-map (kbd "C-c l") lsp-command-map)
  :hook (;; replace XXX-mode with concrete major-mode(e. g. python-mode)
         ;; (rust-mode . lsp)
         (lsp-mode . lsp-enable-which-key-integration)
         (typescript-mode . lsp-deferred)))

(with-eval-after-load 'lsp-mode
  (add-to-list 'lsp-file-watch-ignored-directories "[/\\\\]gen\\'")
  (add-to-list 'lsp-file-watch-ignored-directories "[/\\\\]style\\'")
  (add-to-list 'lsp-file-watch-ignored-directories "[/\\\\]dist\\'")
  (add-to-list 'lsp-file-watch-ignored-directories "[/\\\\]public\\'"))

;; optionally
(use-package lsp-ui :commands lsp-ui-mode)
(use-package lsp-ivy :commands lsp-ivy-workspace-symbol)
(use-package lsp-treemacs :commands lsp-treemacs-errors-list)

;; optionally if you want to use debugger
(use-package dap-mode)
;; (use-package dap-LANGUAGE) to load the dap adapter for your language

;; optional if you want which-key integration
(use-package which-key
    :config
    (which-key-mode))

;; Debug adapter protocol
;; Enabling only some features
(setq dap-auto-configure-features '(sessions locals controls tooltip))
(add-hook 'dap-stopped-hook
          (lambda (arg) (call-interactively #'dap-hydra)))

;; Remove the stupid stupid beeps
(setq visible-bell 1)

;; Org mode
(global-set-key (kbd "C-c l") 'org-store-link)
(global-set-key (kbd "C-c a") 'org-agenda)
(global-set-key (kbd "C-c c") 'org-capture)
(setq org-todo-keywords
      '((sequence "TODO" "VERIFY" "|" "DONE")))
(add-hook 'org-mode-hook #'toggle-word-wrap)

(setq org-roam-directory "~/code/buildonomy/belief-network")
(use-package org-roam
  :ensure t
  :after org
  :bind (("C-c n l" . org-roam-buffer-toggle)
         ("C-c n c" . org-roam-capture)
         ("C-c n f" . org-roam-node-find)
         ("C-c n i" . org-roam-node-insert))
  :config
  (setq org-roam-database-connector 'sqlite-builtin)
  (setq org-roam-dailies-directory "logs")
  (setq org-roam-file-extensions '("org" "md")) ; enable Org-roam for a markdown extension
  (use-package org-roam-export))

(add-to-list  'load-path "~/code/3rdparty/md-roam") ; md-roam; use markdown in org-roam
(use-package md-roam ; md-roam-mode needs to be active before org-roam-db-sync
  :after org-roam)
(require 'md-roam)
(md-roam-mode 1)
(setq md-roam-file-extension "md")
(org-roam-db-autosync-mode 1)
(add-to-list 'org-roam-capture-templates
             '("m" "Markdown" plain "" :target
               (file+head "%<%Y-%m-%dT%H%M%S>.md"
                          "---\ntitle: ${title}\nid: %<%Y-%m-%dT%H%M%S>\ncategory: \n---\n")
               :unnarrowed t))
(add-to-list 'org-roam-capture-templates
             '("c" "Belief: Core" plain "%[../templates/core.md.templ]"
               :target
               (file "core/${slug}.md")
               :unnarrowed t))
(add-to-list 'org-roam-capture-templates
             '("a" "Belief: Action" plain "%[../templates/action.md.templ]"
               :target
               (file "act/${slug}.md")
               :unnarrowed t))
(add-to-list 'org-roam-capture-templates
             '("s" "Belief: Symbol" plain "%[../templates/symbol.md.templ]"
               :target
               (file "sym/${slug}.md")
               :unnarrowed t))
(add-to-list 'org-roam-capture-templates
             '("p" "Belief: Press Release Symbol" plain "%[../templates/press_release.md.templ]"
               :target
               (file "sym/${slug}.md")
               :unnarrowed t))
(add-to-list 'org-roam-capture-templates
             '("t" "Channel: Personal Dashboard" plain "%[templates/channel.org.templ]"
               :target
               (file "%<%Y%m%d%H%M%S>-channel-${slug}.org")
               :unnarrowed t))
;; Format the side-buffer for org-roam backlinks
(add-to-list 'display-buffer-alist
             '("\\*org-roam\\*"
               (display-buffer-in-direction)
               (direction . right)
               (window-width . 0.33)
               (window-height . fit-window-to-buffer)))

;; fly spell
(dolist (hook '(text-mode-hook))
  (add-hook hook (lambda () (flyspell-mode 1))))
(dolist (hook '(rst-mode-hook))
  (add-hook hook (lambda () (flyspell-mode 1))))
(dolist (hook '(org-mode-hook))
  (add-hook hook (lambda () (flyspell-mode 1))))
(dolist (hook '(markdown-mode-hook))
  (add-hook hook (lambda () (flyspell-mode 1))))
(dolist (hook '(change-log-mode-hook log-edit-mode-hook))
  (add-hook hook (lambda () (flyspell-mode -1))))
(add-hook 'c++-mode-hook
        (lambda ()
          (flyspell-prog-mode)
        ))
;; (add-hook 'rust-mode-hook
;;         (lambda ()
;;           (flyspell-prog-mode)
;;         ))
(add-hook 'python-mode-hook
        (lambda ()
          (flyspell-prog-mode)
        ))

(use-package python-docstring
  :ensure t
  :config (setq python-docstring-sentence-end-double-space nil)
  :hook (python-mode . python-docstring-mode))

;; (defun flycheck-python-setup ()
;;   (flycheck-mode))
;; (add-hook 'python-mode-hook #'flycheck-python-setup)

;; so that we can use .dir-locals.el values to set python flycheck options and not get warnings
;; every time.
;; allow remembering risky variables
(advice-add 'risky-local-variable-p :override #'ignore)

;; Main reason for this is to get ~/.cargo/bin/rust-analyzer into PATH
(setenv "PATH" (concat (getenv "PATH") ":/home/alyjak/.cargo/bin"))
(setq exec-path (append exec-path '("/home/alyjak/.cargo/bin")))

;; ;; better window selection than stupid other-window command
;; (when (fboundp 'windmove-default-keybindings)
;;   (windmove-default-keybindings))

;; don't show trailing whitespace in term mode
(defun turn-off-trailing-whitespace ()
  (setq show-trailing-whitespace nil))
(add-hook 'term-mode-hook 'turn-off-trailing-whitespace)

;; Save last session
(desktop-save-mode 1)

;; no tabs!
(setq-default indent-tabs-mode nil)

;; follow logs
(add-to-list 'auto-mode-alist '("\\.log\\'" . auto-revert-tail-mode))

;; https://emacs.stackexchange.com/questions/37417/flyspell-in-terminal
(eval-after-load "flyspell"
  '(progn
     (fset 'flyspell-emacs-popup 'flyspell-emacs-popup-textual)))

(add-hook 'writeroom-mode-hook
      (lambda ()
        (make-local-variable 'visual-fill-column-width)
        (setq visual-fill-column-width 101)))

;; https://stackoverflow.com/questions/2680389/how-to-remove-all-files-ending-with-made-by-emacs#2680682
(setq backup-directory-alist '(("." . "~/.emacs.d/backup"))
  backup-by-copying t    ; Don't delink hardlinks
  version-control t      ; Use version numbers on backups
  delete-old-versions t  ; Automatically delete excess backups
  kept-new-versions 20   ; how many of the newest versions to keep
  kept-old-versions 5    ; and how many of the old
  )

(add-hook 'after-init-hook 'global-company-mode)

(provide '.emacs)
;;; .emacs ends here
